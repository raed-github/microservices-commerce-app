version: '3.7'
services:
  mongodb:
    image: docker.io/bitnami/mongodb:latest
    container_name: 'bitnami-mongodb-dev'
    ports:
      - "27017:27017"
    expose:
      - '27017'
    volumes:
      - ./mongo-data:/data/db
    environment:
      - MONGODB_DISABLE_SYSTEM_LOG=true
      - ALLOW_EMPTY_PASSWORD=yes
      - MONGODB_SYSTEM_LOG_VERBOSITY=3
    networks:
      - app-tier

  mysql:
    image: docker.io/bitnami/mysql:latest
    container_name: 'bitnami-mysql-dev'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ./mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_USER=admin
      - MYSQL_ROOT_PASSWORD=admin
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/mysql/healthcheck.sh' ]
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - app-tier

  rabbitmq:
    image: 'bitnami/rabbitmq:latest'
    container_name: 'bitnami-rabbitmq-dev'
    environment:
      - RABBITMQ_USERNAME=rabbitmq
      - RABBITMQ_PASSWORD=rabbitmq
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    ports:
      - 5672:5672
      - 15672:15672
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"